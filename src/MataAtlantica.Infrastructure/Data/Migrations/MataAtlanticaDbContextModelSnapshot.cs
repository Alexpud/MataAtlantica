// <auto-generated />
using System;
using MataAtlantica.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace MataAtlantica.Infrastructure.Data.Migrations
{
    [DbContext(typeof(MataAtlanticaDbContext))]
    partial class MataAtlanticaDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("MataAtlantica.Domain.Entidades.Avaliacao", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(36)
                        .HasColumnType("character varying(36)");

                    b.Property<DateTime>("CriadoEm")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("character varying(1000)");

                    b.Property<string>("FornecedorId")
                        .HasColumnType("character varying(36)");

                    b.Property<float>("NotaProduto")
                        .HasColumnType("real");

                    b.Property<string>("ProdutoId")
                        .HasColumnType("character varying(36)");

                    b.Property<DateTime?>("UltimaAtualizacao")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("FornecedorId");

                    b.HasIndex("ProdutoId");

                    b.ToTable("Avaliacao");
                });

            modelBuilder.Entity("MataAtlantica.Domain.Entidades.Categoria", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(36)
                        .HasColumnType("character varying(36)");

                    b.Property<string>("CategoriaPaiId")
                        .HasColumnType("character varying(36)");

                    b.Property<DateTime>("CriadoEm")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.HasKey("Id");

                    b.HasIndex("CategoriaPaiId");

                    b.ToTable("Categoria");
                });

            modelBuilder.Entity("MataAtlantica.Domain.Entidades.Fornecedor", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(36)
                        .HasColumnType("character varying(36)");

                    b.Property<string>("CpfCnpj")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<DateTime>("CriadoEm")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("character varying(1000)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.Property<DateTime?>("UltimaAtualizacao")
                        .IsRequired()
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id");

                    b.ToTable("Fornecedor");
                });

            modelBuilder.Entity("MataAtlantica.Domain.Entidades.Produto", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(36)
                        .HasColumnType("character varying(36)");

                    b.Property<string>("CategoriaId")
                        .HasColumnType("character varying(36)");

                    b.Property<DateTime>("CriadoEm")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<string>("FornecedorId")
                        .HasColumnType("character varying(36)");

                    b.Property<string>("Marca")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<float>("Preco")
                        .HasColumnType("real");

                    b.Property<DateTime?>("UltimaAtualizacao")
                        .IsRequired()
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id");

                    b.HasIndex("CategoriaId");

                    b.HasIndex("FornecedorId");

                    b.ToTable("Produto");
                });

            modelBuilder.Entity("MataAtlantica.Domain.Entidades.Usuario", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<DateTime>("CriadoEm")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("Sobrenome")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<DateTime>("UltimaAtualizacao")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id");

                    b.HasIndex("Login")
                        .IsUnique();

                    b.ToTable("Usuario");
                });

            modelBuilder.Entity("MataAtlantica.Domain.Entidades.Avaliacao", b =>
                {
                    b.HasOne("MataAtlantica.Domain.Entidades.Fornecedor", null)
                        .WithMany("Avaliacoes")
                        .HasForeignKey("FornecedorId");

                    b.HasOne("MataAtlantica.Domain.Entidades.Produto", "Produto")
                        .WithMany()
                        .HasForeignKey("ProdutoId");

                    b.Navigation("Produto");
                });

            modelBuilder.Entity("MataAtlantica.Domain.Entidades.Categoria", b =>
                {
                    b.HasOne("MataAtlantica.Domain.Entidades.Categoria", "CategoriaPai")
                        .WithMany("SubCategorias")
                        .HasForeignKey("CategoriaPaiId");

                    b.Navigation("CategoriaPai");
                });

            modelBuilder.Entity("MataAtlantica.Domain.Entidades.Fornecedor", b =>
                {
                    b.OwnsOne("MataAtlantica.Domain.Entidades.Endereco", "Localizacao", b1 =>
                        {
                            b1.Property<string>("FornecedorId")
                                .HasColumnType("character varying(36)");

                            b1.Property<string>("Bairro")
                                .HasMaxLength(50)
                                .HasColumnType("character varying(50)");

                            b1.Property<string>("CEP")
                                .HasColumnType("text");

                            b1.Property<string>("Cidade")
                                .HasMaxLength(50)
                                .HasColumnType("character varying(50)");

                            b1.Property<string>("Numero")
                                .HasMaxLength(10)
                                .HasColumnType("character varying(10)");

                            b1.Property<string>("Rua")
                                .HasColumnType("text");

                            b1.Property<string>("UF")
                                .HasMaxLength(5)
                                .HasColumnType("character varying(5)");

                            b1.HasKey("FornecedorId");

                            b1.ToTable("Fornecedor");

                            b1.WithOwner()
                                .HasForeignKey("FornecedorId");
                        });

                    b.Navigation("Localizacao");
                });

            modelBuilder.Entity("MataAtlantica.Domain.Entidades.Produto", b =>
                {
                    b.HasOne("MataAtlantica.Domain.Entidades.Categoria", "Categoria")
                        .WithMany()
                        .HasForeignKey("CategoriaId");

                    b.HasOne("MataAtlantica.Domain.Entidades.Fornecedor", "Fornecedor")
                        .WithMany("Produtos")
                        .HasForeignKey("FornecedorId");

                    b.OwnsOne("MataAtlantica.Domain.Entidades.ConfiguracaoImagens", "ConfiguracaoImagens", b1 =>
                        {
                            b1.Property<string>("ProdutoId")
                                .HasColumnType("character varying(36)");

                            b1.HasKey("ProdutoId");

                            b1.ToTable("Produto");

                            b1.ToJson("ConfiguracaoImagens");

                            b1.WithOwner()
                                .HasForeignKey("ProdutoId");

                            b1.OwnsMany("MataAtlantica.Domain.Entidades.Imagem", "ImagensIlustrativas", b2 =>
                                {
                                    b2.Property<string>("ConfiguracaoImagensProdutoId")
                                        .HasColumnType("character varying(36)");

                                    b2.Property<int>("Id")
                                        .ValueGeneratedOnAdd()
                                        .HasColumnType("integer");

                                    b2.Property<int>("Ordem")
                                        .HasColumnType("integer");

                                    b2.HasKey("ConfiguracaoImagensProdutoId", "Id");

                                    b2.ToTable("Produto");

                                    b2.WithOwner()
                                        .HasForeignKey("ConfiguracaoImagensProdutoId");
                                });

                            b1.OwnsMany("MataAtlantica.Domain.Entidades.Imagem", "Thumbnails", b2 =>
                                {
                                    b2.Property<string>("ConfiguracaoImagensProdutoId")
                                        .HasColumnType("character varying(36)");

                                    b2.Property<int>("Id")
                                        .ValueGeneratedOnAdd()
                                        .HasColumnType("integer");

                                    b2.Property<int>("Ordem")
                                        .HasColumnType("integer");

                                    b2.HasKey("ConfiguracaoImagensProdutoId", "Id");

                                    b2.ToTable("Produto");

                                    b2.WithOwner()
                                        .HasForeignKey("ConfiguracaoImagensProdutoId");
                                });

                            b1.Navigation("ImagensIlustrativas");

                            b1.Navigation("Thumbnails");
                        });

                    b.Navigation("Categoria");

                    b.Navigation("ConfiguracaoImagens");

                    b.Navigation("Fornecedor");
                });

            modelBuilder.Entity("MataAtlantica.Domain.Entidades.Usuario", b =>
                {
                    b.OwnsMany("MataAtlantica.Domain.Entidades.MetodoPagamento", "OpcoesPagamento", b1 =>
                        {
                            b1.Property<string>("Id")
                                .HasColumnType("text");

                            b1.Property<string>("Bandeira")
                                .IsRequired()
                                .HasColumnType("text");

                            b1.Property<DateTime>("CriadoEm")
                                .HasColumnType("timestamp with time zone");

                            b1.Property<string>("NumeroIdentificacao")
                                .IsRequired()
                                .HasMaxLength(16)
                                .HasColumnType("character varying(16)");

                            b1.Property<string>("Tipo")
                                .IsRequired()
                                .HasColumnType("text");

                            b1.Property<DateTime>("UltimaAtualizacao")
                                .HasColumnType("timestamp with time zone");

                            b1.Property<string>("UsuarioId")
                                .IsRequired()
                                .HasColumnType("text");

                            b1.Property<DateTime>("Validade")
                                .HasColumnType("timestamp with time zone");

                            b1.HasKey("Id");

                            b1.HasIndex("UsuarioId");

                            b1.ToTable("MetodoPagamento", (string)null);

                            b1.WithOwner()
                                .HasForeignKey("UsuarioId");
                        });

                    b.OwnsOne("MataAtlantica.Domain.Entidades.Endereco", "Endereco", b1 =>
                        {
                            b1.Property<string>("UsuarioId")
                                .HasColumnType("text");

                            b1.Property<string>("Bairro")
                                .HasMaxLength(50)
                                .HasColumnType("character varying(50)");

                            b1.Property<string>("CEP")
                                .HasColumnType("text");

                            b1.Property<string>("Cidade")
                                .HasMaxLength(50)
                                .HasColumnType("character varying(50)");

                            b1.Property<string>("Numero")
                                .HasMaxLength(10)
                                .HasColumnType("character varying(10)");

                            b1.Property<string>("Rua")
                                .HasMaxLength(100)
                                .HasColumnType("character varying(100)");

                            b1.Property<string>("UF")
                                .HasMaxLength(5)
                                .HasColumnType("character varying(5)");

                            b1.HasKey("UsuarioId");

                            b1.ToTable("Usuario");

                            b1.WithOwner()
                                .HasForeignKey("UsuarioId");
                        });

                    b.Navigation("Endereco");

                    b.Navigation("OpcoesPagamento");
                });

            modelBuilder.Entity("MataAtlantica.Domain.Entidades.Categoria", b =>
                {
                    b.Navigation("SubCategorias");
                });

            modelBuilder.Entity("MataAtlantica.Domain.Entidades.Fornecedor", b =>
                {
                    b.Navigation("Avaliacoes");

                    b.Navigation("Produtos");
                });
#pragma warning restore 612, 618
        }
    }
}
